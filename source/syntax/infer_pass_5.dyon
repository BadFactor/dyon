multiply__matrix_matrix(a: [vec4], b: [vec4]) = sift i {(
        a[i] *. (x(b[0]), x(b[1]), x(b[2]), x(b[3])),
        a[i] *. (y(b[0]), y(b[1]), y(b[2]), y(b[3])),
        a[i] *. (z(b[0]), z(b[1]), z(b[2]), z(b[3])),
        a[i] *. (w(b[0]), w(b[1]), w(b[2]), w(b[3]))
)}

translate(v: vec4) = [
    (1, 0, 0, x(v)),
    (0, 1, 0, y(v)),
    (0, 0, 1, z(v)),
    (0, 0, 0, 1)
]

fn print__matrix(matrix: [vec4]) {
    for i {
        print(x(matrix[i]))
        print(",")
        print(y(matrix[i]))
        print(",")
        print(z(matrix[i]))
        print(",")
        print(w(matrix[i]))
        println("")
    }
    println("")
}

fn main() {
    mat := multiply(matrix: translate((2, 3)), matrix: translate((1, 4)))
    print(matrix: mat)
}
