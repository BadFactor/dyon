fn main() {
    a := foo()
    bar(a)
}

fn foo() -> \(f64) -> f64 {
    return \(x) = x + 1
}

fn bar(a: \(f64) -> f64) {}

/*
fn main() {
    println(fmap([1, 2, 3], \(x) = x * 2))
}

fmap(list: [], f) = sift i { \f(list[i]) }
*/

/*
fn main() {
    a := {foo__x_y: foo(0)}
    x := any i [1, 3), j [1, 3) { \a.foo(x: i, y: j) }
    if x {
        println(why(x))
    }
}

foo(cmp) =
    if cmp < 0 {
        \(x, y) = x < y
    } else if cmp > 0 {
        \(x, y) = x > y
    } else {
        \(x, y) = x == y
    }
*/

/*
fn main() {
    ~ msg := "hi!"
    a := \(x, y) ~ mut msg = {
        msg = "bye!"
        x < y
    }
    println(\a(2, 3)) // prints `true`
    println(msg) // prints `bye!`
}
*/

/*
fn main() {
    a := foo()
    println(\a(0))
}

fn foo() -> {
    return \(x) = bar(x)
}

bar(x) = x + 2
*/

/*
fn main() {
    a := {x: \(x) = x + 2}
    println(\a.x(0))
}
*/

/*
fn main() {
    a := {foo__x: \(x) = x + 2}
    println(\a.foo(x: 0))
}
*/
